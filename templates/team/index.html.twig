{% extends 'base-dashboard.html.twig' %}

{% block title %}Team repository{% endblock %}

{% block body %}
    <!-- Breadcrumb Area -->
    <div class="breadcrumb-area">
        <h1>Team</h1>
        <ol class="breadcrumb">
            <li class="item"><a href="{{ path('home') }}">Home</a></li>
            <li class="item">Team</li>
        </ol>
    </div>
    <!-- End Breadcrumb Area -->

<!-- Start Resume Alerts Area -->
<div class="resume-alerts-area">
    <div class="resume-alerts-table table-responsive">
        <div class="d-flex flex-row justify-content-between">
            <h2>Team members</h2>
            <div class="default-btn border-radius-5" data-bs-toggle="modal" data-bs-target="#create_new_team">
                create new team
            </div>
        </div>

        <table class="table table-bordered">
            <thead>
            <tr>
                <th>Team name</th>
                <th>Active members</th>
                <th>Role</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for team in team_list %}
            <tr>
                <td>{{ team.nom }}</td>
                <td>{{ team.users|length  }}</td>
                <td>{{ team.role }}</td>
                <td>
                    <ul class="option-list">
                        <li><button class="option-btn d-inline-block edit_team_btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit" data-id="{{ team.id }}"><i class="ri-edit-line"></i></button></li>
                        <li><button class="option-btn d-inline-block delete_team_btn" data-bs-toggle="tooltip" data-bs-placement="top" title="View" data-id="{{ team.id }}"><i class="ri-delete-bin-2-fill"></i></button></li>
                    </ul>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="8">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
        </table>
    </div>

    <!-- add team modal -->
    <div class="col-lg-8 col-md-6">
        <form action="" method="post" id="create_team_form" class="mt-3">
            <div class="modal fade" id="create_new_team" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalCenterTitle">Give a name for the team</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row g-2 mb-3">
                                <div class="col mb-0">
                                    <label for="nom" class="form-label">Name</label>
                                    <input type="text" name="nom" id="nom" class="form-control" placeholder="Team name" />
                                </div>
                            </div>
                            <div class="row g-2 mb-3">
                                <div class="col mb-0">
                                    <label for="role" class="form-label">Role</label>
                                    <input type="text" name="role" id="role" class="form-control" placeholder="Role" />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <!-- team setting modal -->
    <div class="col-lg-8 col-md-6">
        <form action="" method="post" id="edit_team_form" class="mt-3">
            <div class="modal fade" id="team_settings" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-md modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalCenterTitle">Team settings</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row g-2 mb-3">
                                <input type="text" hidden name="id" id="e_id">
                                <div class="col mb-0">
                                    <label for="nom" class="form-label">Name</label>
                                    <input type="text" name="nom" id="e_nom" class="form-control" placeholder="Team name" />
                                </div>
                                <div class="col mb-0">
                                    <label for="role" class="form-label">Role</label>
                                    <input type="text" name="role" id="e_role" class="form-control" placeholder="Role" />
                                </div>
                            </div>
                            <div class="row align-items-center">
                                <h6 class="card-title border-0">Members</h6>
                                <div class="col-12 d-flex gap-3 mb-3">
                                    <select name="user_id" id="user_id" class="form-select member-select">
                                        <option value="">Choose a member to add</option>
                                        {% for member in user_list|filter(u => u.roles[0] != 'ROLE_SUPER_ADMIN') %}
                                            <option value="{{ member.id }}" > {{ member.prenom }} {{ member.nom }} </option>
                                        {% endfor %}
                                    </select>
                                    <button type="button" class="btn btn-primary btn-sm add_member_btn">
                                        <i class="ri-add-line"></i>
                                    </button>
                                </div>
                                <div class="col-12">
                                    <div class="card table-responsive p-0 shadow">
                                        <table class="table text-center" id="member_list">
                                            <thead>
                                            <tr>
                                                <td>Profile</td>
                                                <td>Full name</td>
                                                <td>remove</td>
                                            </tr>
                                            </thead>
                                            <tbody class="table-border-bottom-0">

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer pt-3">
                                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                                    Close
                                </button>
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    {% block javascript %}
    <script>
        //set active page
        $('#teams').toggleClass('active');
    </script>
    <!-- form validation -->
    <script type="application/ecmascript">
        $("#create_team_form").submit(function (event) {
            event.preventDefault();
            //data validation
            let nomField = $("#nom");
            let roleField = $("#role");

            let isValid = true;

            if (nomField.length && roleField.length) {
            //data validation
                let fields = [nomField, roleField];

                fields.forEach(field => {
                if (field.val() === "") {
                field.addClass("error");
                isValid = false;
            } else {
                field.removeClass("error");
            }
        });
        } else {
            // Gestion si les champs ne sont pas trouvés dans le formulaire
            console.error("Les champs 'nom' ou 'role' ne sont pas trouvés dans le formulaire.");
            isValid = false;
        }

        if (isValid) {
        let url = "{{ path('store_team') }}"
                    $.ajax({
                        url: url,
                        method: 'POST',
                        data: $(this).serialize()
                    }).then((response) => {
                        if(response == 'created'){
                            Swal.fire({
                                icon: 'success',
                                title: 'Created',
                                text: 'The team has been created.',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK',
                                timer: 1000
                            }).then(function(){
                                setTimeout(function(){
                                    location.reload()
                                }, 0)
                            });
                        }
                    })
                }

            })
        </script>
        <!--update team name-->
        <script>
            $(document).ready(function(){
                $('#edit_team_form').submit(function(event){
                    event.preventDefault();
                    let url = "{{ path('update_team', {id: 'p_id'}) }}";
                    let id = $('#e_id').val();
                    $.ajax({
                        url: url.replace('p_id', id),
                        method: 'POST',
                        data: $(this).serialize()
                    }).then((response) => {
                        if(response == 'updated'){
                            Swal.fire({
                                icon: 'success',
                                title: 'Updated',
                                text: 'Team has been updated.',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK',
                                timer: 2000
                            }).then(function(){
                                setTimeout(location.reload(), 1000);
                            });
                        }
                    })
                })
            })
        </script>
        <!-- delete data (team) -->
        <script>
            $(document).ready(function(){
                $('.delete_team_btn').click(function(){
                    Swal.fire({
                        icon: 'warning',
                        title: 'Delete Confirmation',
                        text: 'Are you sure you want to remove this  team?',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Delete',
                        cancelButtonText: 'Cancel',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // User clicked the "Delete" button
                            // Perform the deletion here
                            let url = "{{ path('destroy_team', {id: 'p_id'}) }}";
                            let id = $(this).data('id');
                            $.ajax({
                                url: url.replace('p_id', id),
                                method: 'POST',
                            }).then((response) => {
                                if(response == 'deleted'){
                                    $('#'+id).remove();
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted',
                                        text: 'The team has been removed.',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK',
                                        timer: 1000
                                    })
                                }
                            }).fail(function(){
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Remove team members first.',
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'OK'
                                });
                            })
                        }
                    });
                })
            })
        </script>
        <!-- get team data-->
        <script>
            $(document).ready(function(){
                $('.edit_team_btn').click(function(){
                    let url = "{{ path('get_team_data', {id: 'p_id'}) }}";
                    let id = $(this).data('id')
                    $.ajax({
                        url: url.replace('p_id', id),
                        method: 'GET',
                    }).then((response) => {
                        $('#e_id').val(response.id);
                        $('#e_nom').val(response.nom);
                        $('#e_role').val(response.role);
                        //removing old rows (if existe)
                        $('#team_settings table tbody').empty();
                        //generate the table
                        $.each(response.members, function(index, member){
                            let row = $('<tr id="'+ member.id +'">')
                                row.append("<td><img src='{{ asset('assets/img/avatars/no-avatar.png') }}' class='avatar rounded-circle'></td>");
                                row.append('<td>' + member.full_name + '</td>');
                                row.append('<td><button type="button" class="btn btn-sm btn-danger delete_team_member_btn" data-id="'+ member.id +'"><i class="ri-delete-bin-2-fill"></i></button></td>');
                            $('#member_list').append(row);
                        })

                        $('#team_settings').modal('show')
                    })
                })
            })
        </script>
        <!--add member to team-->
        <script>
            $(document).ready(function(){
                $('.add_member_btn').click(function(event){
                    Swal.fire({
                        icon: 'warning',
                        title: 'Adding Confirmation',
                        text: 'Are you sure you want to add this member to the team?',
                        showCancelButton: true,
                        confirmButtonColor: '#007bff',
                        cancelButtonColor: '#ccc',
                        confirmButtonText: 'Add',
                        cancelButtonText: 'Cancel',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // User clicked the "Add" button
                            // Perform the adding here
                            let user_id = $('#user_id').val()
                            let team_id = $('#e_id').val()
                            console.log(user_id);
                            let url = "{{ path('add_member', {id: 'p_id', user_id: 'user_id'}) }}"
                            $.ajax({
                                url: url.replace('p_id', team_id).replace('user_id', user_id),
                                method: 'POST',
                            }).then((response) => {
                                if(!$.isEmptyObject(response)){
                                    let row = $('<tr id="'+ response.id +'">')
                                    row.append("<td> <img src='{{ asset('images/user-img/no-avatar.png')}}' class='avatar rounded-circle'></td>")
                                    row.append('<td> ' + response.full_name + '</td>')
                                    row.append('<td><button type="button" class="btn btn-sm btn-danger delete_team_member_btn" data-id="'+ response.id +'"><i class="ri-delete-bin-2-fill"></i></button></td>');
                                    $('#member_list').append(row)
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Added',
                                        text: 'The member has been added.',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK'
                                    });
                                    $('#team_settings').on('hidden.bs.modal', function (e) {
                                        setTimeout(location.reload(), 1000)
                                    });
                                }
                            }).fail(function(){
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred.',
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'OK'
                                });
                            })
                        }
                    });
                })
            })
        </script>
        <!-- delete data (member from team) -->
        <script>
            $(document).ready(function () {
                $(document).on('click', '.delete_team_member_btn', function () {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Delete Confirmation',
                        text: 'Are you sure you want to remove this member from the team?',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Delete',
                        cancelButtonText: 'Cancel',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            let id = $(this).data('id');
                            let url = "{{ path('remove_member', {user_id: 'p_user_id'}) }}";
                            $.ajax({
                                url: url.replace('p_user_id', id),
                                method: 'POST'
                            }).then((response) => {
                                if(response == 'deleted'){
                                    $('#'+id).remove();
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted',
                                        text: 'The member has been removed.',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK'
                                    });
                                    $('#team_settings').on('hidden.bs.modal', function (e) {
                                    setTimeout(function () {
                                        location.reload();
                                    }, 1000);
                                });
                                }
                            })
                        }
                    });
                });
            });
        </script>
    {% endblock %}
</div>
{% endblock %}
